pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra
)
p_loaded()
dados <- read.csv("BankChurners.csv")
ExpData(dados,type=1)
str(dados)
## rodar: unique(dados$VARIAVEL) para perceber a ordem e nomes dos labels
#ajuste variável género
dados$gender_cod <- as.numeric(dados$Gender == "F")
levels(dados$gender_cod) <- c("M", "F")
table(dados$Gender, dados$gender_cod)
#ajuste variável nível de educação
dados$education_cod <- as.numeric(factor(dados$Education_Level, levels = unique(dados$Education_Level)))
levels(dados$education_cod) <- c("High School","Graduate","Uneducated","Unknown","College","Post-Graduate","Doctorate")
table(dados$Education_Level, dados$education_cod)
#ajuste variável flag de atrito
dados$flag <- as.numeric(dados$Attrition_Flag == "Existing Customer")
levels(dados$gender_cod) <- c("Existing Customer", "Attrited Customer")
table(dados$Attrition_Flag, dados$flag)
# ajuste variável estado civil
dados$marital_cod <- as.numeric(factor(dados$Marital_Status, levels = unique(dados$Marital_Status)))
levels(dados$marital_cod) <- c("Married","Single","Unknown","Divorced")
table(dados$Marital_Status, dados$marital_cod)
# ajuste variável nivel de renda
dados$income_cod <- as.numeric(factor(dados$Income_Category, levels = unique(dados$Income_Category)))
levels(dados$income_cod) <- c("$60K - $80K","Less than $40K","$80K - $120K",  "$40K - $60K",
"$120K +","Unknown")
table(dados$Income_Category, dados$income_cod)
# ajuste variável tipo de cartão
dados$card_cod <- as.numeric(factor(dados$Card_Category, levels = unique(dados$Card_Category)))
levels(dados$card_cod) <- c("Blue", "Gold", "Silver", "Platinum")
table(dados$Card_Category, dados$card_cod)
est <- ExpNumStat(dados, Outlier = TRUE, Nlim=1)
est_shor <- est %>%
dplyr::select(Vname, TN, NA_Value, min, max, median, mean, SD, nOutliers)
est_shor
#br19 %>%
#  stargazer(title="Shorter statistics - Constructs order",
#            type= "text",
#            digits = 3, flip=FALSE)
View(dados)
est_shor
View(dados)
dados2 <- dados[ ,1:21]
View(dados2)
View(dados)
write.csv(dados2, file = "BankChuners2.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
options(repos = "https://cran.rstudio.com")
rm(list = ls())
if(!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra
)
p_loaded()
dados <- read.csv("BankChurners2.csv")
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
str(dados)
ExpData(dados,type=2)
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
## rodar: unique(dados$VARIAVEL) para perceber a ordem e nomes dos labels
#ajuste variável género
dados$gender_cod <- as.numeric(dados$Gender == "F")
levels(dados$gender_cod) <- c("M", "F")
table(dados$Gender, dados$gender_cod)
#ajuste variável nível de educação
dados$education_cod <- as.numeric(factor(dados$Education_Level, levels = unique(dados$Education_Level)))
levels(dados$education_cod) <- c("High School","Graduate","Uneducated","Unknown","College","Post-Graduate","Doctorate")
table(dados$Education_Level, dados$education_cod)
#ajuste variável flag de atrito
dados$flag <- as.numeric(dados$Attrition_Flag == "Existing Customer")
levels(dados$gender_cod) <- c("Existing Customer", "Attrited Customer")
table(dados$Attrition_Flag, dados$flag)
# ajuste variável estado civil
dados$marital_cod <- as.numeric(factor(dados$Marital_Status, levels = unique(dados$Marital_Status)))
levels(dados$marital_cod) <- c("Married","Single","Unknown","Divorced")
table(dados$Marital_Status, dados$marital_cod)
# ajuste variável nivel de renda
dados$income_cod <- as.numeric(factor(dados$Income_Category, levels = unique(dados$Income_Category)))
levels(dados$income_cod) <- c("$60K - $80K","Less than $40K","$80K - $120K",  "$40K - $60K",
"$120K +","Unknown")
table(dados$Income_Category, dados$income_cod)
# ajuste variável tipo de cartão
dados$card_cod <- as.numeric(factor(dados$Card_Category, levels = unique(dados$Card_Category)))
levels(dados$card_cod) <- c("Blue", "Gold", "Silver", "Platinum")
table(dados$Card_Category, dados$card_cod)
est <- ExpNumStat(dados, Outlier = TRUE, Nlim=1)
est_shor <- est %>%
dplyr::select(Vname, TN, NA_Value, min, max, median, mean, SD, nOutliers)
est_shor
#br19 %>%
#  stargazer(title="Shorter statistics - Constructs order",
#            type= "text",
#            digits = 3, flip=FALSE)
est_shor
gg_miss_var(dados)
library(naniar)
gg_miss_var(dados)
gg_miss_upset(dados)
library(DataExplorer)
introduce(dados)
plot_intro(ddos)
plot_intro(dados)
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
boxplot(dados$Credit_Limit ~ dados$Marital_Status)
boxplot(dados$Credit_Limit ~ dados$marital_cod)
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
## rodar: unique(dados$VARIAVEL) para perceber a ordem e nomes dos labels
#ajuste variável género
dados$gender_cod <- as.numeric(dados$Gender == "F")
levels(dados$gender_cod) <- c("M", "F")
table(dados$Gender, dados$gender_cod)
#ajuste variável nível de educação
dados$education_cod <- as.numeric(factor(dados$Education_Level, levels = unique(dados$Education_Level)))
levels(dados$education_cod) <- c("High School","Graduate","Uneducated","Unknown","College","Post-Graduate","Doctorate")
table(dados$Education_Level, dados$education_cod)
#ajuste variável flag de atrito
dados$flag <- as.numeric(dados$Attrition_Flag == "Existing Customer")
levels(dados$gender_cod) <- c("Existing Customer", "Attrited Customer")
table(dados$Attrition_Flag, dados$flag)
# ajuste variável estado civil
dados$marital_cod <- as.numeric(factor(dados$Marital_Status, levels = unique(dados$Marital_Status)))
levels(dados$marital_cod) <- c("Married","Single","Unknown","Divorced")
table(dados$Marital_Status, dados$marital_cod)
# ajuste variável nivel de renda
dados$income_cod <- as.numeric(factor(dados$Income_Category, levels = unique(dados$Income_Category)))
levels(dados$income_cod) <- c("$60K - $80K","Less than $40K","$80K - $120K",  "$40K - $60K",
"$120K +","Unknown")
table(dados$Income_Category, dados$income_cod)
# ajuste variável tipo de cartão
dados$card_cod <- as.numeric(factor(dados$Card_Category, levels = unique(dados$Card_Category)))
levels(dados$card_cod) <- c("Blue", "Gold", "Silver", "Platinum")
table(dados$Card_Category, dados$card_cod)
plot_intro(dados)
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
plot_intro(dados)
## rodar: unique(dados$VARIAVEL) para perceber a ordem e nomes dos labels
#ajuste variável género
dados$gender_cod <- as.numeric(dados$Gender == "F")
levels(dados$gender_cod) <- c("M", "F")
table(dados$Gender, dados$gender_cod)
#ajuste variável nível de educação
dados$education_cod <- as.numeric(factor(dados$Education_Level, levels = unique(dados$Education_Level)))
levels(dados$education_cod) <- c("High School","Graduate","Uneducated","Unknown","College","Post-Graduate","Doctorate")
table(dados$Education_Level, dados$education_cod)
#ajuste variável flag de atrito
dados$flag <- as.numeric(dados$Attrition_Flag == "Existing Customer")
levels(dados$gender_cod) <- c("Existing Customer", "Attrited Customer")
table(dados$Attrition_Flag, dados$flag)
# ajuste variável estado civil
dados$marital_cod <- as.numeric(factor(dados$Marital_Status, levels = unique(dados$Marital_Status)))
levels(dados$marital_cod) <- c("Married","Single","Unknown","Divorced")
table(dados$Marital_Status, dados$marital_cod)
# ajuste variável nivel de renda
dados$income_cod <- as.numeric(factor(dados$Income_Category, levels = unique(dados$Income_Category)))
levels(dados$income_cod) <- c("$60K - $80K","Less than $40K","$80K - $120K",  "$40K - $60K",
"$120K +","Unknown")
table(dados$Income_Category, dados$income_cod)
# ajuste variável tipo de cartão
dados$card_cod <- as.numeric(factor(dados$Card_Category, levels = unique(dados$Card_Category)))
levels(dados$card_cod) <- c("Blue", "Gold", "Silver", "Platinum")
table(dados$Card_Category, dados$card_cod)
View(est)
plot_missing(dados)
plot_bar(dados)
class(dados$gender_cod)
class(dados$income_cod)
str(dados$income_cod)
dados$income_cod <- as.factor(dados$income_cod)
str(dados$income_cod)
plot_bar(dados)
#Análise das variáveis categóricas
plot_bar(dados)
create_report(dados, output_format = html_document)
create_report(dados)
plot_bar(dados, with = "gender_cod")
plot_bar(dados, by = "Card_Category")
plot_histogram(dados)
View(dados)
plot_density(dados)
View(dados)
plot_qq(dados)
plot_boxplot(dados)
plot_boxplot(dados, by = gender_cod)
plot_boxplot(dados, by = dados$Gender)
plot_boxplot(dados, by = "gender_cod")
plot_boxplot(dados, by = "Gender")
#Análise das variáveis categóricas
plot_bar(dados)
#Análise das variáveis numéricas
plot_histogram(dados)
plot_density(dados)
plot_qq(dados)
plot_boxplot(dados, by = "Gender")
dados$Marital_Status
a <- c(10,15, 30)
class(a)
a <- c("10","15", "30")
class(a)
plot_correlation(dados)
plot_str(dados)
dados$X
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
options(repos = "https://cran.rstudio.com")
rm(list = ls())
if(!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra
)
p_loaded()
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
View(dados)
dados <- dados[ , -1]
write.csv(dados, file = "BankChurners2.csv")
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
View(dados)
dados <- read.csv("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
View(dados)
dados <- read.csv2("BankChurners2.csv")
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
View(dados)
str(dados)
View(dados)
plot_bar(dados)
dados <- read.csv("BankChurners.csv")
View(dados)
dados <- dados[ ,1:21]
View(dados)
dados <- read.csv("BankChurners.csv")
dados <- dados[ ,1:21] # excluir as ultimas duas colunas para ocultar o resultado anterior do projeto
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
## rodar: unique(dados$VARIAVEL) para perceber a ordem e nomes dos labels
#ajuste variável género
dados$gender_cod <- as.numeric(dados$Gender == "F")
levels(dados$gender_cod) <- c("M", "F")
table(dados$Gender, dados$gender_cod)
#ajuste variável nível de educação
dados$education_cod <- as.numeric(factor(dados$Education_Level, levels = unique(dados$Education_Level)))
levels(dados$education_cod) <- c("High School","Graduate","Uneducated","Unknown","College","Post-Graduate","Doctorate")
table(dados$Education_Level, dados$education_cod)
#ajuste variável flag de atrito
dados$flag <- as.numeric(dados$Attrition_Flag == "Existing Customer")
levels(dados$gender_cod) <- c("Existing Customer", "Attrited Customer")
table(dados$Attrition_Flag, dados$flag)
# ajuste variável estado civil
dados$marital_cod <- as.numeric(factor(dados$Marital_Status, levels = unique(dados$Marital_Status)))
levels(dados$marital_cod) <- c("Married","Single","Unknown","Divorced")
table(dados$Marital_Status, dados$marital_cod)
# ajuste variável nivel de renda
dados$income_cod <- as.numeric(factor(dados$Income_Category, levels = unique(dados$Income_Category)))
levels(dados$income_cod) <- c("$60K - $80K","Less than $40K","$80K - $120K",  "$40K - $60K",
"$120K +","Unknown")
table(dados$Income_Category, dados$income_cod)
# ajuste variável tipo de cartão
dados$card_cod <- as.numeric(factor(dados$Card_Category, levels = unique(dados$Card_Category)))
levels(dados$card_cod) <- c("Blue", "Gold", "Silver", "Platinum")
table(dados$Card_Category, dados$card_cod)
est <- ExpNumStat(dados, Outlier = TRUE, Nlim=1)
est
est_shor <- est %>%
dplyr::select(Vname, TN, NA_Value, min, max, median, mean, SD, nOutliers)
est_shor
#visto não haver missing values no dataframe as linhas estão ocultas.
#gg_miss_var(dados)
#gg_miss_upset(dados)
#plot_missing(dados)
#Excluding rows with missing data
#dados_no_na <- na.omit(dados)
#ExpData(dados_no_na,type=1)
#Análise das variáveis categóricas
plot_bar(dados)
#Análise das variáveis numéricas
plot_histogram(dados)
plot_density(dados)
plot_qq(dados)
plot_bar(dados, by = "Gender")
plot_bar(dados, by = "Education_Level")
plot_bar(dados, by = "Income_Category")
plot_bar(dados, by = "Marital_Status")
plot_bar(dados, by = "Attrition_Flag")
plot_bar(dados, by = "Card_Category")
#Análise das variáveis categóricas por Genéro
plot_boxplot(dados, by = "Gender")
#Análise das variáveis categóricas por Nível de Educação
plot_boxplot(dados, by = "Education_Level")
#Análise das variáveis categóricas por Nível de Renda
plot_boxplot(dados, by = "Income_Category")
#Análise das variáveis categóricas por Status civil
plot_boxplot(dados, by = "Marital_Status")
#Análise das variáveis categóricas por flag de Atrito
plot_boxplot(dados, by = "Attrition_Flag")
#Análise das variáveis categóricas por Tipo de Cartão
plot_boxplot(dados, by = "Card_Category")
mean(dados$Total_Amt_Chng_Q4_Q1)
plot_boxplot(dados, by = "Card_Category")
plot_density(dados, by = "Card_Category")
plot_scatterplot(dados)
plot_scatterplot(dados, by = "Gender")
plot_scatterplot(dados, by = "Gender")
plot_scatterplot(dados, by = "Gender", ncol = 4L)
plot_scatterplot(dados, by = "Gender")
plot_scatterplot(dados, by = "Gender")
plot_str(dados)
colnames(dados)
summary(dados)
anyDuplicated(dados)
dados$card_cod <- as.integer(dados$card_cod)
library(corrplot)
corrplot(cor(dados))
colnames(dados)
dados_cor <- dados[, !(names(dados) %in% c("CLIENTNUM", "Attrition_Flag", "Gender", "Education_Level", "Marital_Status", "Income_Category", "Card_Category"))]
corrplot(cor(dados_cor))
str(dados_cor)
plot(dados$Customer_Age, dados$Education_Level)
plot(dados$Customer_Age, dados$education_cod)
corrplot(cor(dados_cor))
plot_correlation(dados_cor)
sum(dados$Customer_Age)
par(mfrow = c(1, 1))
plot_correlation(dados_cor)
corrplot(cor(dados_cor))
ggpairs(dados)
ggpairs(dados_cor)
ggpairs(dados[, c("Credit_Limit"
[15] "Total_Revolving_Bal"      "Avg_Open_To_Buy"
ggpairs(dados[, c("Credit_Limit", "Total_Revolving_Bal","Avg_Open_To_Buy","Total_Amt_Chng_Q4_Q1",     "Total_Trans_Amt")], title="tetse")
colnames(dados)
ggpairs(dados[ ,c("Attrition_Flag", "Dependent_count")])
ggpairs(dados[ ,c("Card_Category", "Dependent_count")])
ggpairs(dados[ ,c("card_cod", "Dependent_count")])
ggpairs(dados[ ,c("card_cod", "Credit_Limit")])
ggpairs(dados[, c("Customer_Age", "Months_on_book","Total_Relationship_Count", "Months_Inactive_12_mon","Contacts_Count_12_mon","Credit_Limit","Total_Revolving_Bal",      "Avg_Open_To_Buy","Total_Amt_Chng_Q4_Q1","Total_Trans_Amt"  ,"Total_Trans_Ct",           "Total_Ct_Chng_Q4_Q1","Avg_Utilization_Ratio"
)], title="Correlações de Pearson")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
options(repos = "https://cran.rstudio.com")
rm(list = ls())
if(!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra
)
p_loaded()
dados <- read.csv("BankChurners.csv")
# excluir as ultimas duas colunas para ocultar o resultado anterior do projeto
dados <- dados[ ,1:21]
#varificar se há alguma linha repetida
anyDuplicated(dados)
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
## rodar: unique(dados$VARIAVEL) para perceber a ordem e nomes dos labels
#ajuste variável género
dados$gender_cod <- as.numeric(dados$Gender == "F")
levels(dados$gender_cod) <- c("M", "F")
table(dados$Gender, dados$gender_cod)
#ajuste variável nível de educação
dados$education_cod <- as.numeric(factor(dados$Education_Level, levels = unique(dados$Education_Level)))
levels(dados$education_cod) <- c("High School","Graduate","Uneducated","Unknown","College","Post-Graduate","Doctorate")
table(dados$Education_Level, dados$education_cod)
#ajuste variável flag de atrito
dados$flag <- as.numeric(dados$Attrition_Flag == "Existing Customer")
levels(dados$gender_cod) <- c("Existing Customer", "Attrited Customer")
table(dados$Attrition_Flag, dados$flag)
# ajuste variável estado civil
dados$marital_cod <- as.numeric(factor(dados$Marital_Status, levels = unique(dados$Marital_Status)))
levels(dados$marital_cod) <- c("Married","Single","Unknown","Divorced")
table(dados$Marital_Status, dados$marital_cod)
# ajuste variável nivel de renda
dados$income_cod <- as.numeric(factor(dados$Income_Category, levels = unique(dados$Income_Category)))
levels(dados$income_cod) <- c("$60K - $80K","Less than $40K","$80K - $120K",  "$40K - $60K",
"$120K +","Unknown")
table(dados$Income_Category, dados$income_cod)
# ajuste variável tipo de cartão
dados$card_cod <- as.numeric(factor(dados$Card_Category, levels = unique(dados$Card_Category)))
levels(dados$card_cod) <- c("Blue", "Gold", "Silver", "Platinum")
table(dados$Card_Category, dados$card_cod)
ggpairs(dados[, c("Customer_Age", "Months_on_book","Total_Relationship_Count", "Months_Inactive_12_mon","Contacts_Count_12_mon","Credit_Limit","Total_Revolving_Bal",      "Avg_Open_To_Buy","Total_Amt_Chng_Q4_Q1","Total_Trans_Amt"  ,"Total_Trans_Ct",           "Total_Ct_Chng_Q4_Q1","Avg_Utilization_Ratio"
)], title="Correlações de Pearson") + theme(text = element_text(size = 8))
ggpairs(dados[, c("Customer_Age", "Months_on_book","Total_Relationship_Count", "Months_Inactive_12_mon","Contacts_Count_12_mon","Credit_Limit","Total_Revolving_Bal",      "Avg_Open_To_Buy","Total_Amt_Chng_Q4_Q1","Total_Trans_Amt"  ,"Total_Trans_Ct",           "Total_Ct_Chng_Q4_Q1","Avg_Utilization_Ratio"
)], title="Correlações de Pearson", textSize = 8)
View(dados)
ggpairs(dados[, c("Customer_Age", "Months_on_book","Total_Relationship_Count", "Months_Inactive_12_mon","Contacts_Count_12_mon","Credit_Limit","Total_Revolving_Bal",      "Avg_Open_To_Buy","Total_Amt_Chng_Q4_Q1","Total_Trans_Amt"  ,"Total_Trans_Ct",           "Total_Ct_Chng_Q4_Q1","Avg_Utilization_Ratio"
)], title="Correlações de Pearson") +  theme(text = element_text(size = 6))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
options(repos = "https://cran.rstudio.com")
rm(list = ls())
if(!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra
)
p_loaded()
dados <- read.csv("BankChurners.csv")
# excluir as ultimas duas colunas para ocultar o resultado anterior do projeto
dados <- dados[ ,1:21]
#varificar se há alguma linha repetida
anyDuplicated(dados)
ExpData(dados,type=1)
ExpData(dados,type=2)
str(dados)
plot_intro(dados)
library(psych)
pairs.panels(dados)
